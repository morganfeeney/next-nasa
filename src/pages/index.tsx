import type { NextPage } from 'next'
import {FC, useEffect, useState, useMemo} from "react";
import Head from 'next/head'
import Image from 'next/image'
import { useRouter } from 'next/router'
import { InferGetServerSidePropsType } from 'next'
import {API_URL} from 'lib/consts'

import styles from 'styles/Home.module.css'

interface Fetcher {
    searchQuery: string;
    queryParam: {text: string};
}

interface NasaData {
    collection?: {
        href: string;
        items: {
            data: {
                center: string;
            }[]
            href: string;
            links: {
                href: string;
                rel: string;
                render: string;
            }[]
        }[]
    }
}

const Home = ({ data }: InferGetServerSidePropsType<typeof getServerSideProps>) => {
    const router = useRouter()
    const [searchQuery, updateSearchQuery] = useState(data.text)
    const [searchData, updateSearchData] = useState<NasaData>({})
    useEffect( () => {
        const fetchData = async ({searchQuery, queryParam}: Fetcher) => {
            if (searchQuery !== '') {
                const url = `${API_URL}/search?&media_type=image&q=${queryParam}&page=1`
                const res = await fetch(url)
                const data = await res.json()
                updateSearchData(data)
            }
        }
        fetchData({searchQuery, queryParam: searchQuery})
        }, []
    )
    console.log({searchQuery, searchData})
    useEffect(() => {
        if (searchQuery) router.push(`?text=${searchQuery}`)
    }, [searchQuery])

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>
        <input type="search" onChange={(event) => updateSearchQuery(event.target.value)}/>
      </main>
        {console.log({searchData})}
        {searchData && searchData?.collection?.items?.map((item) => item.links?.map((item) => <img height={100} width={100} src={item.href}/>))}
        {searchData && searchData?.collection?.items?.map((item) => console.log(item.href))}
        <footer className={styles.footer}>

      </footer>
    </div>
  )
}

export const getServerSideProps = async (context: { query: string; }) => {
  const {query} = context
  console.log({query})
  return {
    props: {
      data: query,
    },
  }
}

export default Home
