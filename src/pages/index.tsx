import {FC, useEffect, useState} from "react";
import Head from 'next/head'
import { useRouter } from 'next/router'
import {API_URL} from 'lib/consts'

import styles from 'styles/Home.module.css'

interface Fetcher {
    queryParam: string;
}

interface Query {
    query: { text: string }
}

interface NasaData {
    collection?: {
        href: string;
        items: {
            data: {
                center: string;
            }[]
            href: string;
            links: {
                href: string;
                rel: string;
                render: string;
            }[]
        }[]
    }
}

interface SearchPageProps {
    data: {text: string}
}

const Home: FC<SearchPageProps> = ({ data }) => {
    const router = useRouter()

    // Used to fetch the data
    const [searchQuery, updateSearchQuery] = useState(data.text)

    // The data returned
    const [searchData, updateSearchData] = useState<NasaData>({})

    // Used to submit the data to fetch
    const [query, setQuery] = useState('')

    useEffect( () => {
        const fetchData = async ({queryParam}: Fetcher) => {
            const url = `${API_URL}/search?&media_type=image&q=${queryParam}&page=1`
            const res = await fetch(url)
            const data = await res.json()
            updateSearchData(data)
        }
        if (query !== '') {
            fetchData({queryParam: query})
        }
        }, [query]
    )

    console.log({searchQuery, searchData})

    useEffect(() => {
        if (query) router.push(`?text=${searchQuery}`)
        else router.push('/')
    }, [query])

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>
        <input type="search" onChange={(event) => updateSearchQuery(event.target.value)} />
          <button type="button" onClick={() => setQuery(searchQuery)}>
              Search
          </button>
      </main>
        {searchData && searchData?.collection?.items?.map((item) => item.links?.map((item) => <img loading={'lazy'} height={100} width={100} src={item.href}/>))}
        <footer className={styles.footer}>
            <h1>footer</h1>
      </footer>
    </div>
  )
}

export const getServerSideProps = async (context: Query) => {
  const {query} = context
  console.log({query})
  return {
    props: {
      data: query,
    },
  }
}

export default Home
